version: ~> 1.0

language: python

notifications:
  webhooks: https://coveralls.io/webhook

branches:
  only:
  - master
  - stable
  - /^v\d+(\.\d+)+/

env:
  global:
    - CANONICAL_PYTHON="3.8"
    - CODECLIMATE=""
    - TWINE_USERNAME="dwhswenson"
    # TWINE_PASSWORD
    - secure: "SVu3pb6i/7unpNG5YbIEifWE/8wTuQb7D9QQZI0lD3vJYpCy0aRYy7FCYRV3KeBxXLrLTfVGyXjrnCJPs3IdY0po35xnmqU9teFOeOJL4K2Ai8LiXUJmDSdmgtrvHnMKKj7VWJXvlndVxGlBGSf8MPIBcwDa6R2G+8Mzak5OQSCv28WP40ZiO6wF3wAg5Oc4aszUNWoiTu1HIf7Zo1IPw6ZS35szpfKhAkyfPAK7+7SW2/YfkadVtrmL1rw1mtmatQjOVRVAnUfPud//K/4URefMcDha/yM0D7WuZbHUY/SmaDx/1ZbhMPGPrm2cUNYKX76VJWfYNByDh8bSpHVtiS365ygJiwzD4q5wx0zv8CltMbcHvBYuROmPPUFrfg+UkL4nVYmXRMjRP3WFPJ9zILe3p3Cptzuh60Fb6aXHYiJ4NB+340QiMisqYYf6WGvxjDJN8NrrPmPeGvvdjnK/fxo0zs3pZOT7qoFqNtLLFWAatWDpoUty6RaZFuDxgBkcVKy9A/1nd3Dx2AWHHGz7DU0qcX3P0e8AoHGE3/nK7ueCKKKpy/EaUTrVXsnwkE2SZlDn86qpgSB5ecaFMijW+80jAPnjlrI9vyoyb1Yd7EivXoDBSEvF7pm8fle4yThpfxOPWxPQ4M/+ruigiukcFPLEKDPQ8EDsMv2iH7u0vho="
    # AUTORELEASE_TOKEN
    - secure: "FKEhbyaPmQI8BmO0HYyernKcGpjEdB+GM5jO8cpLJ7DjqLGG73FpeE0EkAUDMm/k0e+V7/xfOP8gZjx9fMkmIZyndZVv/rkcMZy7uwdpM3CZbys7BRUbIk6fbpnIjxOAI6HJywq3UtmvbGQ/UXIjZ+tPbzTg6Iuf/PADlU4OmzgxWKxPmoJTHy05w/pdnPhXY/zXewLmwEeE0zM4i6jOOwClsLdEy+yfvRTtZXJEr7OHOHnuc6i8SO3eiml7y+17Kcf6iBZp2LFqW1qJxzF9SyqiyDHU/n2suWSl6dR/XCQNhI497pBjZN0RsFzXscnlG6JEfu7F4OcFRZZqfdW266UyKWRX5VcdxdGdHsQAfa7cuHdHFp4bQBSGieokzirHgfe1H/aBdNZtNVdCyx2/jqfQE2V6P08rcymfUiSK+Wqbp8NF4pJ4yaH3tgr1qCnu/HUGkzFxnT6Qq7PMPo5kEHRZihBthiMWAv00b/3JaBQoir3hFecLAQHEA/Ru6YvFOIvKOQ/Db1NbJQ5SrL6ybyhmFA+RI/wbWmEchOb8jsRY2wOhxybWaoci5gJBMAA1FQPpSIbnK1aX4pkylKunlCwVzmAu+wmQBONJmClzpFczHjBsBeXOv5HYEY1UotzZAdEutrA+mS9NFx68eHaGwGC3YpEp/VpBP6PuQDOZS9I="
  matrix:
    - CONDA_PY=3.6
    - CONDA_PY=3.7
    - CONDA_PY=3.8
    - CONDA_PY=3.6  CODEMODEL_EXTRAS=true

before_install:
  - echo "before install"
  - git fetch --tags

install:
  # we use conda to manage Python versions, but all the install is pip
  - source ./devtools/miniconda_install.sh
  - conda create --yes -n codemodel-py${CONDA_PY} python=$CONDA_PY
  - source activate codemodel-py${CONDA_PY}
  - pip install -e .
  - if [ -n "$CODEMODEL_EXTRAS" ]; then pip install -r ./devtools/extras.txt; fi
  - pip install -r ./devtools/tests_require.txt
  - pip list

script:
  - python -c "import codemodel"
  - python autorelease_check.py --branch ${TRAVIS_BRANCH} --event ${TRAVIS_EVENT_TYPE} #--allow-patch-skip  # allow-patch-skip if there was a testpypi problem
  - py.test -vv --cov=codemodel --cov-report xml:cov.xml

after_success:
  - COVERALLS_PARALLEL=true coveralls

# TODO: (1) autorelease should bundle these; (2) pin to autorelease version
import:
  - dwhswenson/autorelease:travis_stages/deploy_testpypi.yml@v0.0.14
  - dwhswenson/autorelease:travis_stages/test_testpypi.yml@v0.0.14
  - dwhswenson/autorelease:travis_stages/cut_release.yml@v0.0.14
  - dwhswenson/autorelease:travis_stages/deploy_pypi.yml@v0.0.14

#jobs:
  #include:
    #- stage: deploy testpypi
      ## This stage runs when you make a PR to stable. It tests that the
      ## deployment to testpypi works.
      #if: "(branch = stable) and (type = pull_request)"
      #python: '3.6'
      #addons:
        #apt_packages:
          #- pandoc
      #install:
        #- pip install twine
      #script:
        #- pandoc --from=markdown --to=rst --output=README.rst README.md
        #- if [ -z "$TWINE_PASSWORD" ]; then echo "Missing password"; fi
        #- if [ -z "$TWINE_USERNAME" ]; then echo "Missing username"; fi
        #- python setup.py sdist bdist_wheel
        #- python -m keyring --disable
        #- twine upload --repository-url https://test.pypi.org/legacy/ dist/*
      #after_success: skip
    #- stage: test testpypi
      ## This stage run when you make a PR to stable; after the package has
      ## been deployed to testpypi. It checks that the deployed package
      ## works.
      #if: "(branch = stable) and (type = pull_request)"
      #python: '3.6'
      #install:
        #- ./devtools/wait_for_testpypi.sh setup.py
        #- PROJECT=`python setup.py --name`
        #- pip install -U -r ./devtools/tests_require.txt
        #- pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple $PROJECT
      #script:
        #- cd ~
        #- python -c "import codemodel"
        #- py.test --pyargs codemodel
      #after_success: skip
    #- stage: cut release
      ## This stage runs after you merge a PR into stable. It cuts the GitHub
      ## release based on the current stable branch and the release notes
      ## from the last PR merged into stable.
      #if: "(branch = stable) and (not type in (pull_request, cron))"
      #python: '3.6'
      #install:
        #- pip install autorelease
      #script:
        #- VERSION=`python setup.py --version`
        #- PROJECT=`python setup.py --name`
        #- autorelease-release --project $PROJECT --version $VERSION --token $AUTORELEASE_TOKEN
      #after_success: skip
    #- stage: deploy pypi
      ## This stage runs when a version-labelled tag is made. It deploys the
      ## package to PyPI.
      #if: tag =~ ^v[0-9]+\.
      #addons:
        #apt_packages:
          #- pandoc
      #install: skip
      #script:
          #- pandoc --from=markdown --to=rst --output=README.rst README.md
      #after_success: true
      #deploy:
        #provider: pypi
        #distributions: sdist bdist_wheel
        #skip_cleanup: true  # need the readme.rst from the script stage
        #user: dwhswenson
        #on:
            #tags: true
        #password:
          #secure: "RlnvzdsyRBWqPEtoXWrXI0MAEyeATR5mj9PrIeklFnvDJy/9Cg9dttAa2swFfRjFJhgkEeSYJSJ5RHX7KUJ1M3A25kXaK4hxNElPAbDWvE77IrMmXIlogCD/KeKI6wqsJUkDIKFoYu437xHEDXG76Yh2qTHcgUrsA5N+GxUWnDFeHlLdQNLI3GiXIuTL3rp8DMBhOdV7i7fB4Y8kzw1AA4PmscmDrsxNx5NAE0tVxMbX+WjPLKkGQzIps+0gDX33bpHnVznvncM/uIV7bWJdpPC56yDLz4cKf5mY9yqYRHvnR+e50bYKiYEu4efXef2nx7t6/ZEyQV/u6diC64oXcGNpzXzxpOq8OvOeiMK6VIj4Q6TKajHKIx9QKL4WUmoWLfCuYMEi/SzIrAydWbI8eXH7lhx+F1+otSZlPiXrMZH8ivCtVLtdGkMCsSm8tA6xdcwjP0cbEk4JOxxBEEDSdq2Xsd5vH7qhG8dm6d7cjA+7fWlQXTCIZoDGgwFla27CYYAiskQL7tc/yFsYM/XDpgYS9NW0gxCfsYH6jqSByNwCzlDOa3JKdnSS3L7vDi0jDvdA/vs+EyPZZvvQIeN9vWw6hD3H2fUrXj/pUjTNJCN+64V+9hYBWoH/zfDou0uiyjEKmkpsET8sbTKH8PsNJ2avX5I6vsTZn+gsJuyIDoQ="
