language: python

notifications:
  webhooks: https://coveralls.io/webhook

branches:
  only:
  - master
  - stable
  - /^v\d+(\.\d+)+$/

env:
  global:
    - CANONICAL_PYTHON="3.8"
    - CODECLIMATE=""
    - TWINE_USERNAME="dwhswenson"
    # TWINE_PASSWORD
    - secure: "SVu3pb6i/7unpNG5YbIEifWE/8wTuQb7D9QQZI0lD3vJYpCy0aRYy7FCYRV3KeBxXLrLTfVGyXjrnCJPs3IdY0po35xnmqU9teFOeOJL4K2Ai8LiXUJmDSdmgtrvHnMKKj7VWJXvlndVxGlBGSf8MPIBcwDa6R2G+8Mzak5OQSCv28WP40ZiO6wF3wAg5Oc4aszUNWoiTu1HIf7Zo1IPw6ZS35szpfKhAkyfPAK7+7SW2/YfkadVtrmL1rw1mtmatQjOVRVAnUfPud//K/4URefMcDha/yM0D7WuZbHUY/SmaDx/1ZbhMPGPrm2cUNYKX76VJWfYNByDh8bSpHVtiS365ygJiwzD4q5wx0zv8CltMbcHvBYuROmPPUFrfg+UkL4nVYmXRMjRP3WFPJ9zILe3p3Cptzuh60Fb6aXHYiJ4NB+340QiMisqYYf6WGvxjDJN8NrrPmPeGvvdjnK/fxo0zs3pZOT7qoFqNtLLFWAatWDpoUty6RaZFuDxgBkcVKy9A/1nd3Dx2AWHHGz7DU0qcX3P0e8AoHGE3/nK7ueCKKKpy/EaUTrVXsnwkE2SZlDn86qpgSB5ecaFMijW+80jAPnjlrI9vyoyb1Yd7EivXoDBSEvF7pm8fle4yThpfxOPWxPQ4M/+ruigiukcFPLEKDPQ8EDsMv2iH7u0vho="
    # AUTORELEASE_TOKEN
    - secure: "R8PbQ+IDNddIbQ1el7aDtEPS++P0BhdlnPhzs39QuUl9p1DBczNOeEfZvo9WyVpE7lGQHIoouyrKO8f5FyxTG5LEA4iUKB9SQvE6S5D/9Ha8k76rtCtw8yTW2vSgXMlh4cAL7YgQeOrsHNIH3faD+vRiBZyJ6aHejyXUNAA6BxsA7YTnExglNkSr2vcwMdCtzzM5at3krqX5ksyITbPa5wU8/ZI2qWgkfKIwt869HRhMB/G3ZAGZyYlNIateyiTm8oWNeJTfa3/mNu2CpLwue47oMudiKD7G+gL2JFsTEQjivKu0DO4X5aYFuumYaiaD+EDCQAHSlDhe1f6rPC9Tgt915V3DqHN38MeIjl87vNJsSUwDnU9F/p6EPUDIhH+T9CitdXAXjXanbTgLkHLF01jspuX8QbuFFSBD89T+CHgvViLanqoJ8pY+W9UGObISsHFbELrrsfRcZszmX22rTlc2r2NxNl6Glo4Z3kiStKbRY5PBQmxiYBIGhBzh27mv5RBekrzBgHQCYp8QNplIZ5pA6AvQrjgbOhR2tfbuSIMJ+I5bx+4XI7i3Ce+si96l3yUQQLduAIFpldtnFZvKbbpXvHXV76NJGcGqsyaCQebQbhRyctU+GHSuEhz6Pz7WloTbiQDBe1icNJH2A68yMLjxAhkC8lyJ6jziVjJ1VdU="
  matrix:
    - CONDA_PY=3.6
    - CONDA_PY=3.7
    - CONDA_PY=3.8
    - CONDA_PY=3.6  CODEMODEL_EXTRAS=true

before_install:
  - echo "before install"
  - git fetch --tags

install:
  # we use conda to manage Python versions, but all the install is pip
  - source ./devtools/miniconda_install.sh
  - conda create --yes -n codemodel-py${CONDA_PY} python=$CONDA_PY
  - source activate codemodel-py${CONDA_PY}
  - pip install -e .
  - if [ -n "$CODEMODEL_EXTRAS" ]; then pip install -r ./devtools/extras.txt; fi
  - pip install -r ./devtools/tests_require.txt
  - pip list

script:
  - python -c "import codemodel"
  - python autorelease_check.py --branch ${TRAVIS_BRANCH} --event ${TRAVIS_EVENT_TYPE} #--allow-patch-skip  # allow-patch-skip if there was a testpypi problem
  - py.test -vv --cov=codemodel --cov-report xml:cov.xml

after_success:
  - COVERALLS_PARALLEL=true coveralls

jobs:
  include:
    - stage: deploy testpypi
      # This stage runs when you make a PR to stable. It tests that the
      # deployment to testpypi works.
      if: "(branch = stable) and (type = pull_request)"
      python: '3.6'
      addons:
        apt_packages:
          - pandoc
      install:
        - pip install twine
      script: 
        - pandoc --from=markdown --to=rst --output=README.rst README.md
        - python setup.py sdist bdist_wheel
        - twine upload --repository-url https://test.pypi.org/legacy/ dist/*
      after_success: skip
    - stage: test testpypi
      # This stage run when you make a PR to stable; after the package has
      # been deployed to testpypi. It checks that the deployed package
      # works.
      if: "(branch = stable) and (type = pull_request)"
      python: '3.8'
      install:
        - source ci/pip-install/install_requirements.sh
        - pip install -U -r ci/pip-install/testing_requirements.txt
        - pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple codemodel
      script:
        - cd ~
        - python -c "import codemodel"
        - py.test --pyargs codemodel
      after_success: skip
    - stage: cut release
      # This stage runs after you merge a PR into stable. It cuts the GitHub
      # release based on the current stable branch and the release notes
      # from the last PR merged into stable.
      if: "(branch = stable) and (not type in (pull_request, cron))"
      python: '3.6'
      install:
        - pip install autorelease
      script:
        - VERSION=`python setup.py --version`
        - PROJECT=`python setup.py --name`
        - autorelease-release --project $PROJECT --version $VERSION --token $AUTORELEASE_TOKEN
      after_success: skip
    - stage: deploy pypi
      # This stage runs when a version-labelled tag is made. It deploys the
      # package to PyPI.
      if: tag =~ ^v[0-9]+\.
      addons:
        apt_packages:
          - pandoc
      install: skip
      script:
          - pandoc --from=markdown --to=rst --output=README.rst README.md
      after_success: true
      deploy:
        provider: pypi
        distributions: sdist bdist_wheel
        skip_cleanup: true  # need the readme.rst from the script stage
        user: dwhswenson
        on:
            tags: true
        password:
          secure: "UN99BfNgMlE1qOwkbvJYMEdPGVF02dnZ5iF9HZY5HwJr7nlW1ixEGn6SzICS7WwLzthfqpbwXaqVGEsbsn1YwsvQe72JyCZxftoxZC2bVi5JV/OZka5uUTx0NXtzukZp33AUTDA9J2vushIxZCHSJG+GFqx4c+L8Y194V0QS4sw/lbtGC3qZ8jmszCnRgfPbb0tmCe4Jj1snclspPXhYtXL2z9Xh4r+ImCfosBFfThtsUs6t37/Jrx1srmDrt0eaGGBm1NAcyIVP6x03TdVVUFt/ud3U7+o0iHhqdEZKfUc2Dp6YN08Ck6Zyr/dR/A0Sc3/pWvytXwXLzOj+d7BtaAmPApcAc6v5GEmwWc4mkdsD+CEEW1q3CEFbWq6RTL+oa2zvEO6k0VrnHMCni3KqsWGmF6B209tHhy8jFAmCIruD2foUz7NxEKWNEOR4bqIjOGGIgGp4mfH+1l73JrI995ZmB1PqiIkxVeX0nPrZUZtBxOUyxg6aiL+NHMaYr5NCq2uCzDYhtwWnk26Oq6/JAEMxN+SCiC+O+DSvdQaUgUp6eS5whHGvf27ZxRMkmTSYTIMN6V1/PQ9WWSFsy0QBUYB7UJf/JLFnTi5xHj08jFNzUVOmeyq9MBzJF/ztnTTBSJgzNDROV+2qsZC0Ulm/hesMe0Swxqu/S5PelzrgwCA="
