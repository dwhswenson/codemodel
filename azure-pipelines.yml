pr:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
      has_extras: ''
    Python37:
      python.version: '3.7'
      has_extras: ''
    Python38:
      python.version: '3.8'
      has_extras: ''
    Extras:
      python.version: '3.6'
      has_extras: 'true'

steps:
- bash: |
    echo "##vso[task.prependpath]$CONDA/bin"
    export CONDA_PY=$(python.version)
    conda create --yes -n codemodel-py${CONDA_PY} python=${CONDA_PY} pip
  displayName: 'Create conda env'

- bash: |
    source activate codemodel-py$(python.version)
    python --version
    python -m pip install -e .
    if [ -n "$(has_extras)" ]; then python -m pip install -r ./devtools/extras.txt; fi
    conda env list
  displayName: 'Install'

- bash: |
    source activate codemodel-py$(python.version)
    python -m pip install -r ./devtools/tests_require.txt
    python -m pip install pytest-azurepipelines
  displayName: 'Install testing tools'

- bash: |
    source activate codemodel-py$(python.version)
    conda env list
    which python
    python --version
    conda list
  displayName: 'Versions'

- bash: |
    source activate codemodel-py$(python.version)
    python autorelease_check.py \
        --branch $(System.PullRequest.TargetBranch) \
        --event pull_request
  displayName: 'Autorelease check'

- bash: |
    source activate codemodel-py$(python.version)
    py.test -vv --cov=codemodel --cov-report xml:cov.xml
  displayName: 'Unit tests'

- bash: |
    bash <(curl -s https://codecov.io/bash)
  displayName: 'After success'
